fragment ExpenditureBalance on ExpenditureBalance {
  tokenAddress
  amount
}

fragment Expenditure on Expenditure {
  id
  slots {
    ...ExpenditureSlot
  }
  motions {
    items {
      transactionHash
      action {
        type
      }
    }
  }
  balances {
    ...ExpenditureBalance
  }
  status
  ownerAddress
  userStakeId
  createdAt
  firstEditTransactionHash
}

# It is important this fragment contains all the fields of the ExpenditureSlot type
# Otherwise, missing fields will be lost when block-ingestor updates slots
fragment ExpenditureSlot on ExpenditureSlot {
  id
  recipientAddress
  claimDelay
  payoutModifier
  payouts {
    tokenAddress
    amount
    isClaimed
    networkFee
  }
}

fragment StreamingPayment on StreamingPayment {
  id
  startTime
  endTime
  tokenAddress
  amount
  interval
  metadata {
    ...StreamingPaymentMetadata
  }
  claims {
    amount
    timestamp
  }
  changelog {
    transactionHash
    oldValues {
      ...StreamingPaymentChanges
    }
    newValues {
      ...StreamingPaymentChanges
    }
  }
}

fragment StreamingPaymentMetadata on StreamingPaymentMetadata {
  id
  endCondition
  changelog {
    transactionHash
    oldEndCondition
    newEndCondition
  }
}

fragment StreamingPaymentChanges on StreamingPaymentChanges {
  startTime
  endTime
  interval
  amount
}
